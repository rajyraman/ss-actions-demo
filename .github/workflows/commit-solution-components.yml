name: commit-solution-components

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      environmentUrl: "https://dreamingincrm.crm6.dynamics.com"
      tenantId: "6698ac31-e602-4f64-ac1f-472ae585c006"
      applicationId: "f0a39d99-08df-492d-9c84-ecc22aaa064a"
      solution: "GitHubSolution"
      timeZone: "AUS Eastern Standard Time"
      paCheckerGeography: "Australia"
      paCheckerSaveResults: "true"      
    steps:
      - uses: actions/checkout@v2

      - id: who-am-i
        name: Connecting to ${{ env.environmentUrl }} as ${{ env.applicationId }}
        uses: microsoft/powerplatform-actions/who-am-i@main
        with:
          environment-url: ${{ env.environmentUrl }}        
          app-id: ${{ env.applicationId }}
          client-secret: ${{ secrets.dataversesecret }}
          tenant-id: ${{ env.tenantId }}

      - id: increment-solution-version
        name: Incrementing Solution Version in format yyyy.MM.dd.run
        shell: powershell
        run: |
          Install-Module -Name Microsoft.Xrm.Data.PowerShell -Confirm:$false -Verbose -Force
          $conn = Get-CrmConnection -ConnectionString "AuthType=ClientSecret; Url=${{ env.environmentUrl }}; ClientId=${{ env.applicationId }}; ClientSecret=${{ secrets.dataversesecret }}"
          $version = "$([System.TimeZoneInfo]::ConvertTimeBySystemTimeZoneId((Get-Date), '${{ env.timeZone }}').ToString("yyyy.MM.dd")).${{ github.run_number }}";
          echo "::set-output name=solutionVersion::$version"          
          Set-CrmSolutionVersionNumber -SolutionName ${{ env.solution }} -VersionNumber $version

      - id: export-managed-solution
        name: Export ${{ env.solution }} as Managed
        uses: microsoft/powerplatform-actions/export-solution@main
        with:
          environment-url: ${{ env.environmentUrl }}        
          app-id: ${{ env.applicationId }}
          client-secret: ${{ secrets.dataversesecret }}
          tenant-id: ${{ env.tenantId }}
          solution-name: ${{ env.solution }}
          solution-output-file: "${{ env.solution }}_managed.zip"
          working-directory: "out"
          managed: true
          run-asynchronously: true

      - id: export-unmanaged-solution
        name: Export ${{ env.solution }} as Unmanaged
        uses: microsoft/powerplatform-actions/export-solution@main
        with:
          environment-url: ${{ env.environmentUrl }}        
          app-id: ${{ env.applicationId }}
          client-secret: ${{ secrets.dataversesecret }}
          tenant-id: ${{ env.tenantId }}
          solution-name: ${{ env.solution }}
          solution-output-file: "${{ env.solution }}.zip"
          working-directory: "out"
          run-asynchronously: true

      - id: unpack-solution
        name: Unpack ${{ env.solution }}
        uses: microsoft/powerplatform-actions/unpack-solution@main
        with:
          solution-file: "out/${{ env.solution }}.zip"
          solution-folder: "Solutions/${{ env.solution }}/src"
          solution-type: "Both"
          overwrite-files: true

      - id: branch-name
        name: Set Branch Name variable
        run: |
          echo "::set-output name=branchName::${{ env.solution }}_${{ steps.increment-solution-version.outputs.solutionVersion }}"

      - id: create-solution-branch
        name: Create ${{ steps.branch-name.outputs.branchName }} branch
        uses: microsoft/powerplatform-actions/branch-solution@main
        with:
          solution-folder: "Solutions/${{ env.solution }}"
          solution-target-folder: "Solutions/${{ env.solution }}"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          branch-name: ${{ steps.branch-name.outputs.branchName }}

      - uses: octokit/request-action@v2.x
        name: Create PR for branch ${{ steps.branch-name.outputs.branchName }}
        id: create_pr
        with:
          owner: "rajyraman"
          repo: ${{ github.repository }}
          route: POST /repos/:repo/pulls
          title: ${{ steps.branch-name.outputs.branchName }}
          head: ${{ steps.branch-name.outputs.branchName }}
          base: "main"
          maintainer_can_modify: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check ${{ env.solution }} using Power Apps Checker
        id: powerapps-checker
        uses: rajyraman/powerapps-checker@v1.3.1
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          solutionName: ${{ env.solution }}
          sourceEnvironmentUrl: ${{ env.environmentUrl }}
          applicationId: ${{ env.applicationId }}
          applicationSecret: ${{ secrets.dataversesecret }}
          tenantId: ${{ env.tenantId }}
          geography: ${{ env.paCheckerGeography }}
          saveResults: ${{ env.paCheckerSaveResults }}     